@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@400;600&display=swap');

/***
    The new CSS reset - version 1.11.2 (last updated 15.11.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" element is excluded, otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
 */
*:where(
    :not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)
  ) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Fix mobile Safari increase font-size on landscape mode */
html {
  -moz-text-size-adjust: none;
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu,
summary {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
  all: revert;
  box-sizing: border-box;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable='false'])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable='true']) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
  box-sizing: border-box;
}

/* Remove details summary webkit styles */
::-webkit-details-marker {
  display: none;
}

input[type='checkbox'],
input[type='radio'] {
  all: revert;
}
/*end reset */
:where(html) {
  --accent-color-1: #007aff;
  --accent-color-2: #302ecb;
}

body {
  font-family: 'Raleway', sans-serif;
  font-size: 1rem;
  color: #111827;
  /* border-top: 0.3rem solid var(--accent-color-1); */
}

p {
  width: 50ch;
}

a {
  color: var(--accent-color-1);
}

a:hover {
  text-decoration: underline;
}

header {
  display: flex;
  align-items: center;
  gap: 2rem;
  /* background-color: #f5f8fc; */
}

#logo-35 {
  flex-basis: 20;
}

nav {
  flex-basis: 80;
}

main,
header {
  padding-block: 1rem;
  padding-inline: 5rem;
}

nav a {
  text-decoration: none;
  margin-right: 1rem;
}

nav a:hover {
  text-decoration: none;
}

nav a.active {
  font-weight: 800;
  padding-bottom: 0.2rem;
  border-bottom: 3px solid var(--accent-color-1);
}

h1 {
  font-size: 18px;
  margin-block: 1rem;
  text-transform: uppercase;
  font-weight: 600;
}

h5 {
  font-weight: 600;
}

.toast-top {
  position: fixed;
  left: 50%;
  top: 2rem;
  transform: translate(-50%, -50%);
}

.toast-bottom {
  position: fixed;
  left: 1rem;
  bottom: 2rem;
  transform: translate(-50%, -50%);
}

.alert {
  display: flex;
  gap: 1rem;
  border: 1px solid #4b5563;
  background-color: var(--accent-color-2);
  color: white;
  box-shadow: 0.5px 1px lightgrey;
  border-radius: 0.4rem;
  padding-block: 1rem;
  padding-inline: 2rem;
  width: fit-content;
}

.error {
  font-size: 0.8rem;
  color: red;
}

form {
  display: flex;
  flex-direction: column;
  gap: 0.6rem;
  padding-inline: 1rem;
  padding-block: 1rem;
  min-height: 24.3rem;
}

label {
  font-weight: 600;
}

input,
textarea,
select {
  padding: 0.4rem;
  color: #4b5563;
  border: 1px solid lightgrey;
  border-radius: 0.4rem;
  font-size: 1rem;
}

input:focus,
textarea:focus,
select:focus {
  border: 2px solid grey;
}

input:has(+ .error),
textarea:has(+ .error),
select:has(+ .error) {
  border: 2px solid red;
}

textarea {
  height: 4rem;
}

input[type='checkbox'] {
  width: fit-content;
  transform: scale(1.3);
  accent-color: var(--accent-color-1);
}

button,
.button {
  background-color: white;
  /* color: #111827;
  border: 1px solid #111827; */
  color: #4b5563;
  border: 1px solid #4b5563;
  padding-block: 0.5rem;
  padding-inline: 1rem;
  text-decoration: none;
  width: fit-content;
  border-radius: 0.4rem;
}

button,
a {
  cursor: pointer;
}

.architect-background {
  /* background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='100' height='199' viewBox='0 0 100 199'%3E%3Cg fill='%23302ecb' fill-opacity='0.09'%3E%3Cpath d='M0 199V0h1v1.99L100 199h-1.12L1 4.22V199H0zM100 2h-.12l-1-2H100v2z'%3E%3C/path%3E%3C/g%3E%3C/svg%3E"); */
}

.pattern-1 {
  /* position: absolute;
  top: 6rem;
  left: 2rem;  */
  width: 50rem;
  height: 46rem;
  background-color: transparent;
  /* z-index: -1; */
}

.skeleton {
  animation: skeleton-loading 1s linear infinite alternate;
}

@keyframes skeleton-loading {
  0% {
    background-color: hsl(200, 20%, 80%);
  }
  100% {
    background-color: hsl(200, 20%, 95%);
  }
}

.skeleton-text {
  width: 24ch;
  height: 1.2rem;
  margin-bottom: 0.5rem;
  border-radius: 0.25rem;
}

button.skeleton {
  width: 62px;
  height: 38px;
}

.primary {
  background-color: var(--accent-color-1);
  color: white;
  font-weight: 500;
  border: none;
}

.actions {
  display: flex;
  justify-content: flex-start;
  gap: 0.4rem;
  align-items: center;
  border-top: 1px solid lightgray;
  padding-top: .6rem;
}

.center {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: 2rem;
}

.large {
  padding-block: 1rem;
  padding-inline: 2rem;
  font-size: 1.4rem;
}

.link-bar {
  display: flex;
  justify-content: flex-end;
  margin-block: 1rem;
}

.panel {
  background-color: #f5f8fc;
  padding-inline: 2rem;
  padding-block: 2rem;
  border-radius: 0.8rem;
  /* width: fit-content; */
  width: 100%;
  border: 1px solid #f5f8fc;
  min-height: 100vh;
}

.list {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-around;
  gap: 1.2rem;
}

.card {
  display: flex;
  flex-direction: column;
  border: 1px solid #cbd5e1;
  background-color: #fafafa;
  box-shadow: 0.5px 1px lightgrey;
  gap: 2rem;
  width: 20rem;
  height: 100%;
  border-radius: 0.4rem;
}

.card p {
  width: 34ch;
}

.card.card-large p {
  width: 40ch;
}

.card img {
  width: 20rem;
  height: 12rem;
  border-radius: 1.4rem;
  padding: 1rem;
}

.card section {
  padding-inline: 1rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding-bottom: 1rem;
}

.card-large {
  width: fit-content;
  font-size: 1.6rem;
  border-top: 5px solid var(--accent-color-1);
}

.card-large img {
  width: fit-content;
  height: auto;
  border-radius: 2.8rem;
  padding: 2rem;
}

.card.card-large section {
  gap: 1.6rem;
  padding: 2rem;
}

.text-secondary {
  font-size: 0.8rem;
  color: #4b5563;
}

.card-large .text-secondary {
  font-size: 1.2rem;
}

mark.active {
  background-color: var(--accent-color-1);
  color: white;
  padding: 0.5rem;
}

#messageDiv {
  background-color: #fbdde2b4;
  padding-block: 0.8rem;
  padding-inline: 1.2rem;
  width: fit-content;
  border: 1px solid #111827;
}

.fade-in {
  -webkit-animation: fade-in 1.2s cubic-bezier(0.39, 0.575, 0.565, 1) both;
  animation: fade-in 1.2s cubic-bezier(0.39, 0.575, 0.565, 1) both;
}

.fade-out {
  -webkit-animation: fade-out 1s ease-out both;
  animation: fade-out 1s ease-out both;
}

@-webkit-keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}
@keyframes fade-in {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@-webkit-keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes fade-out {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}

/* The flip card container - set the width and height to whatever you want. We have added the border property to demonstrate that the flip itself goes out of the box on hover (remove perspective if you don't want the 3D effect */
.flip-card {
  perspective: 1000px; /* Remove this if you don't want the 3D effect */
  height: 400px;
}

/* This container is needed to position the front and back side */
.flip-card-inner {
  position: relative;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}

/* Do an horizontal flip when you move the mouse over the flip box container */
/* .flip-card:hover .flip-card-inner {
  transform: rotateY(180deg);
} */

.flip-card-inner.flipped {
  transform: rotateY(180deg);
}

/* Position the front and back side */
.flip-card-front,
.flip-card-back {
  position: absolute;
  width: 100%;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
}

/* Style the front side (fallback if image is missing) */
.flip-card-front {
}

/* Style the back side */
.flip-card-back {
  transform: rotateY(180deg);
}
